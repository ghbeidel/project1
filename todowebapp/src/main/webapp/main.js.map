{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/nav/nav.component.css","webpack:///./src/app/components/nav/nav.component.html","webpack:///./src/app/components/nav/nav.component.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  ngOnInit(): void{\n\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { NavComponent } from './components/nav/nav.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: '**',\n    redirectTo: ''\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes, {useHash: true}),\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [AuthGuardService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<app-nav [navItems]=\\\"userNavs\\\"></app-nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  userNavs: Array<{title: string}>;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    // if (this.authService.hasRoles(['Manager'])) {\n    //   this.userNavs = environment.managerNav;\n    // } else {\n    //   this.userNavs = environment.employeeNav;\n    // }\n  }\n}\n","module.exports = \".form-container {\\r\\n  margin: 0 auto;\\r\\n  width: 20%;\\r\\n  height: 200px;\\r\\n  text-align: center;\\r\\n  padding-top: 260px;\\r\\n  background-color: blue;\\r\\n\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"form-container\\\">\\n  <form #loginForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"loginSubmit()\\\">\\n    <div>\\n      <input type=\\\"text\\\"\\n             name=\\\"username\\\"\\n             placeholder=\\\"email\\\"\\n             [(ngModel)]=\\\"username\\\"\\n             required/>\\n    </div>\\n    <div>\\n      <input type=\\\"password\\\"\\n             name=\\\"password\\\"\\n             placeholder=\\\"password\\\"\\n             [(ngModel)]=\\\"password\\\"\\n             required/>\\n    </div>\\n    <div>\\n      <button type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AuthService} from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;\n  password: string;\n\n  returnUrl: string;\n\n  constructor(\n\n  private authService: AuthService,\n  private router: Router,\n  private route: ActivatedRoute ) {}\n\n\n  ngOnInit() {\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  loginSubmit(){\n    this.authService.authenticate(this.username, this.password, () => this.router.navigate([this.returnUrl]),\n      (err) => {\n      console.log(\"hey\");\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav>\\n  <ul>\\n    <li *ngFor=\\\"let item of navItems\\\">{{ item.title }}</li>\\n  </ul>\\n</nav>\\n\"","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  @Input() navItems: Array<{title: string}>;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\n// used as a route guard.\n// if returning false the route will not be loaded\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (localStorage.getItem('authToken')) {\n      return true;\n    }\n    this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private authUrl = \"/todowebapp_war_exploded/auth\";\n\n\n  constructor(\n    private http: HttpClient\n  ) {\n  }\n\n  isLoggedIn(): boolean {\n    return localStorage.getItem('authToken') !== null;\n  }\n\n  hasRoles(roles: Array<string>): boolean {\n    const tokenRoles: Array<string> = JSON.parse(localStorage.getItem('authToken')).roles;\n    return roles.every(role => tokenRoles.indexOf(role) >= 0);\n  }\n\n  authenticate(username: string, password: string, success, fail) {\n    return this.http.post<any>(this.authUrl,\n      JSON.stringify({email: username, password: password}),\n      {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .toPromise()\n      .then((resp) => {\n          localStorage.setItem('authToken', JSON.stringify(resp));\n          success();\n        },\n        (err) => {\n          fail(err);\n        });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}